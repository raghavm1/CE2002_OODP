import java.util.Scanner;
import java.util.Date;
import java.util.List;
import modules.CustomerCineplexDBModule;
import modules.CustomerMovieDBModule;
import modules.CustomerMovieListingsDBModule;
import managers.BookingDBManager;
import managers.CustomerMovieListingDBManager;
import entities.MovieListing;
import entities.Booking;
import entities.CinemaHall;
import entities.Movie;
import entities.CinemaHall;
/**
 * The main UI module for Customers.
 *
 * @author Gan Shyan
 */
public class CustomerModule {
    private Scanner scanner;
    private int sel = -1;

    public CustomerModule() {
        scanner = new Scanner(System.in);
    }

    public void startUp() {
        System.out.println("****** Welcome Customer ******");

        while (sel != 0) {
            System.out.println("Customer Module Main Menu:");
            System.out.println("(0): Exit Customer Module");
            System.out.println("(1): Access Movie Database");
            System.out.println("(2): Access Movie Listings Database");
            System.out.println("(3): Access Cineplex Locations Database");
            System.out.println("(4): Book Tickets!");
            sel = scanner.nextInt();
            scanner.nextLine();

            switch (sel) {
                case 1:
                    new CustomerMovieDBModule().startUp();
                    break;
                case 2:
                    new CustomerMovieListingsDBModule().startUp();
                    break;
                case 3:
                    new CustomerCineplexDBModule().startUp();
                    break;
                case 4:
                	
                	BookingDBManager book = new BookingDBManager();
                	System.out.println("Enter Customer Name:");
                	String customerName = scanner.nextLine();
                    System.out.println("Enter emailID:");
                    String emailID=scanner.nextLine();
                    System.out.println("Enter Mobile Number");
                    int mobileNumber = scanner.nextInt();
                    System.out.println("Enter Movie Name");
                    String movieName = scanner.nextLine();
                    Movie movie_temp = new Movie(movieName);
                    System.out.println("Enter Movie Date:");
                    System.out.println("Enter Movie Year");
                    int year= scanner.nextInt();
                    System.out.println("Enter Movie Month");
                    int month= scanner.nextInt();
                    System.out.println("Enter Movie Date");
                    int date= scanner.nextInt();
                    System.out.println("Enter Movie Hours");
                    int hours= scanner.nextInt();
                    System.out.println("Enter Movie Minutes");
                    int minutes= scanner.nextInt();
                    Date show = new Date(year,month,date,hours,minutes);
                    System.out.println("Enter Cinema Hall ID");
                    int cinemaHallID = scanner.nextInt();
                    CinemaHall temp_hall=new CinemaHall(cinemaHallID);
                    System.out.println("Enter Cineplex Name");
                    String cineplexName = scanner.nextLine();
                    
                    CustomerMovieListingDBManager checker = new CustomerMovieListingDBManager();
                    
                    List<MovieListing> existing=checker.getAllUpcomingMovieListings();
                    MovieListing currentEntry =new MovieListing(0,cineplexName,temp_hall,show,movie_temp); 
                    int valid=0;
                    for (MovieListing m : existing)
                    {
                    	m.setId(0);
                    	if(!cineplexName.equals(m.getCineplexName()))
                    	{
                    		continue;
                    	}
                    	if(m.getCinemaHall().getHallNumber()!= cinemaHallID)
                    	{
                    		continue;
                    	}
                    	if(!show.equals(m.getShowTime()))
                    	{
                    		continue;
                    	}
                    	if(!m.getMovie().getTitle().equals(movieName))
                    	{
                    		continue;
                    	}
                    	currentEntry = m;
                    	valid=1;
                    }
                    if(valid==0)
                    {
                    	System.out.println()
                    }
                    Booking book_new = new Booking(customerName,emailID,mobileNumber, movieName, cinemaHallID,cineplexName);
                    
                	break;
            }
        }
    }
}
